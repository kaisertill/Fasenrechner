<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAACcCAYAAAA6R+R/AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
<<<<<<< HEAD
        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
        SUVORK5CYII=
=======
        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
>>>>>>> master
</value>
  </data>
</root>